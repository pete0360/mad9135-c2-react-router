{"version":3,"sources":["components/Navbar/Navbar.js","components/User/User.js","components/Users/Users.js","components/Not/Not.js","components/Home/Home.js","components/Address/Address.js","components/App/App.js","index.js"],"names":["Navbar","props","className","activeClassName","to","exact","User","list","id","useParams","user","find","item","index","parseInt","src","picture","large","alt","name","first","last","location","street","number","city","country","postcode","login","uuid","username","password","Users","length","map","Card","style","width","Img","variant","Body","Text","email","cell","Not","Home","Address","useState","setList","type","a","fetch","resp","json","data","results","sort","b","useEffect","fetchData","state","App","pathname","useLocation","indexOf","console","log","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.695fde19.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport './navbar.css';\n\nexport default function Navbar(props) {\n  return (\n    <div className=\"navbar\">\n      <NavLink activeClassName=\"active\" className = \"nav-item\" to=\"/\" exact>\n        Home\n      </NavLink>\n      <NavLink activeClassName=\"active\" className = \"nav-item\" to=\"/users\">\n        User List\n      </NavLink>\n      <NavLink activeClassName=\"active\" className = \"nav-item\" to=\"/address\">\n        Address List\n      </NavLink>\n    </div>\n  );\n}","import { useParams } from 'react-router-dom';\nimport \"./user.css\"\n\n\nexport default function User({ list }){\n\n\n    const { id } = useParams()\n\n\n    let user = list.find((item, index) => parseInt(id) === index + 1)\n\n    return(\n        <div className = \"detail-card\">\n            <div className = \"img-container\">\n            {user && <img className = \"detail-image\" src = {user.picture.large} alt = \"user\" />}    \n            </div>\n            <div className = \"detail-info\">\n            {user && <h1>{user.name.first} {user.name.last}</h1>}\n            {user && <h3>Address</h3>}\n            {user && <p>{user.location.street.number} {user.location.street.name}, {user.location.city}, {user.location.country}, {user.location.postcode} </p>}\n            {user && <h2>Login Info </h2>}\n            {user && <p><h4>uuid</h4> {user.login.uuid}</p>}\n            {user && <p><h4>username</h4>{user.login.username}</p>}\n            {user && <p><h4>password</h4> {user.login.password}</p>}\n\n            </div>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { Route, NavLink } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\n\n\nimport './users.css'\nimport User from \"../User/User\"\n\n\nexport default function Users({ list }){\n    // const [list, setList] = useState([]);\n\n\n\n    // async function fetchData(type) {\n    //     let url = `https://randomuser.me/api/?nat=ca&seed=0360&format=json&results=16`;\n    //     let resp = await fetch(url);\n    //     let data = await resp.json();\n    //     setList(data.results)\n    // }\n\n    // function findUser(id) {\n    // return list.find((item, index) => parseInt(id) === index + 1);\n    // }\n\n    // useEffect(() => {\n    //     fetchData();\n        \n    // }, []);\n\n\n\n    return (\n        <>\n\n            <div className = \"users\">\n                <div className = \"cardList parent\">\n                    {list.length === 0 && <p>Loading...</p>}\n                    {list.map((item, index) => (\n                    <div key = {item.name.first }  className = {`div${index + 1} center-page`} >\n                        \n                        <Card className style={{ width: '18rem' }}\n                        >\n                            <Card.Img className = \"userImage\" variant=\"top\" src={item.picture.large} />\n                            <div className = \"cardContainer\">\n                            <h2>{item.name.first} {item.name.last} </h2>\n                            <Card.Body>\n                                <Card.Text>{item.email}</Card.Text>\n                                <Card.Text>{item.cell}</Card.Text>\n                                <NavLink className = \"card-Link\" to={`/users/${index + 1}`}>More info</NavLink>\n                            </Card.Body>\n                            </div>\n                        </Card>\n                    </div>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}","\nexport default function Not(props) {\n    return (\n      <div className=\"not\">\n        <p>This is the 404 file not found page.</p>\n      </div>\n    );\n  }","import React from 'react'\nimport \"./home.css\"\n\nexport default function Home(props) {\n    return (\n      <div className=\"home\">\n        <h1>Welcome!</h1>\n\n        <p>Here you can find specific details of randomly generated users.</p>\n        <p>Click on the User list to find an assortment of users. To find more details about a specific user, click on the more info link</p>\n        <p>Click on the Address list to find a table of all the address's of the generated users </p>\n      </div>\n    );\n  }\n  \n \n","import { useState, useEffect } from 'react'\nimport { Route, NavLink } from 'react-router-dom'\nimport Table from 'react-bootstrap/Table'\nimport \"./address.css\"\n\nexport default function Address(){\n    const [list, setList] = useState([]);\n\n\n    useEffect(() => {\n        fetchData();\n        \n      }, []);\n\n      async function fetchData(type) {\n        let url = `https://randomuser.me/api/?nat=ca&seed=0360&format=json&results=16`;\n        let resp = await fetch(url);\n        let data = await resp.json();\n        setList(data.results.sort((a,b) => {\n            if(a.name.last > b.name.last) return 1\n            else if(a.name.last < b.name.last) return -1\n            else return 0\n        }))\n      }\n\n      return (\n        <div className = 'address-main'> \n        <div className = \"container\">\n        {list.length === 0 && <p>Loading...</p>}\n        \n        <thead >\n          <tr className = \"titles\">\n            <th>#</th>\n            <th>Last Name</th>\n            <th>First Name</th>\n            <th>Address</th>\n            <th>Details</th>\n          </tr>\n\n        </thead>\n        <tbody>\n          {list.map((item, index) => (\n            <tr>\n                <th>{index + 1}</th>\n                <th>{item.name.last}</th>\n                <th>{item.name.first}</th>\n                <th>{item.location.street.number} {item.location.street.name}, {item.location.city}, {item.location.state} </th>\n                <th><NavLink className = \"card-Link\" to={`/users/${index + 1}`}>Details about {item.name.first}</NavLink></th>\n            </tr>\n          ))}\n        </tbody>\n      \n      </div>\n      </div>\n      )\n}","import './App.css';\nimport Navbar from \"../Navbar/Navbar\"\nimport Users from \"../Users/Users\"\nimport User from \"../User/User\"\nimport Not from \"../Not/Not\"\nimport Home from \"../Home/Home\"\nimport Address from \"../Address/Address\"\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom'\nimport {useState, useEffect} from 'react'\n\n\nfunction App() {\n  const { pathname } = useLocation()\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    (async function () {\n      if (pathname.indexOf('/users') > -1) {\n        let resp = await fetch('https://randomuser.me/api/?nat=ca&seed=0360&format=json&results=16');\n        let data = await resp.json();\n        console.log('Fetched the users. Updating user state');\n        setList(data.results);\n        console.log(data.results)\n      }\n    })();\n  }, [pathname]);\n\nconsole.log({list})\n\n  return (\n  <div className=\"App\">\n    <header>\n      <Navbar />\n    </header>\n    <main >\n      <Switch>\n      <Route path=\"/users/:id\">\n            <User list = { list }/>\n          </Route>\n        <Route path=\"/users\">\n          <Users list = { list }/>\n        </Route>\n        \n        <Route path=\"/address\">\n        <Address />\n        </Route>\n        <Route path=\"/404\">\n        <Not />\n        </Route>\n\n        <Route \n        path=\"/\"\n        exact\n        render={() => {\n            return <Home />;\n          }}\n        />\n\n        <Redirect to = \"/404\" />\n      </Switch>\n    </main>\n  </div>)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}